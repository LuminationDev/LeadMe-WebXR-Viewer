{"version":3,"sources":["../src/index.ts","../src/LeadMeLabsConnection.ts"],"sourcesContent":["import LeadMeLabsConnection from './LeadMeLabsConnection'\n\nexport { LeadMeLabsConnection }","import {Server, Socket} from \"node:net\";\n\nconst net = require('net')\nclass LeadMeLabsConnection {\n    private logCallback: () => void = () => {\n    }\n    private pauseCallback: () => void = () => {\n    }\n    private resumeCallback: () => void = () => {\n    }\n    private shutdownCallback: () => void = () => {\n    }\n    private detailsCallback: () => void = () => {\n    }\n    private actionCallback: (message: string) => void = (message: string) => {\n    }\n\n    private server: Server;\n    private client: Socket;\n\n    public connect() {\n        var PIPE_NAME = \"leadme_api\";\n        var PIPE_PATH = \"\\\\\\\\.\\\\pipe\\\\\" + PIPE_NAME;\n        this.server = net.createServer((stream: Socket) => {\n            stream.on('data', (c) => {\n                this.handleMessage(c.toString().replace(/\\u0000/g, ''))\n            });\n        }).on('error', () => { this.server = null });\n        if (this.server) {\n            this.server.listen(PIPE_PATH)\n        }\n    }\n\n    public disconnect() {\n        this.server.close()\n    }\n\n    public send(message: string) {\n        var PIPE_NAME = \"leadme_parent_api\";\n        var PIPE_PATH = \"\\\\\\\\.\\\\pipe\\\\\" + PIPE_NAME;\n        if (!this.client) {\n            this.client = net.connect(PIPE_PATH).on('error', () => { this.client = null })\n        }\n        if (this.client) {\n            this.client.write(Buffer.from(message, 'utf16le'))\n        }\n    }\n\n    public setLogCallback(callback: () => void) {\n        this.logCallback = callback\n    }\n\n    public setPauseCallback(callback: () => void) {\n        this.pauseCallback = callback\n    }\n\n    public setResumeCallback(callback: () => void) {\n        this.resumeCallback = callback\n    }\n\n    public setShutdownCallback(callback: () => void) {\n        this.shutdownCallback = callback\n    }\n\n    public setDetailsCallback(callback: () => void) {\n        this.detailsCallback = callback\n    }\n\n    public setActionCallback(callback: (message: string) => void) {\n        this.actionCallback = callback\n    }\n\n    private handleMessage(message: string)\n    {\n        switch (message)\n        {\n            case \"log\":\n                this.logCallback();\n                break;\n            case \"pause\":\n                this.pauseCallback();\n                break;\n            case \"resume\":\n                this.resumeCallback();\n                break;\n            case \"shutdown\":\n                this.shutdownCallback();\n                break;\n            case \"details\":\n                this.detailsCallback();\n                break;\n            case \"action\":\n            default:\n                this.actionCallback(message);\n                break;\n        }\n    }\n}\n\nexport default LeadMeLabsConnection"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEA,IAAM,MAAM,QAAQ,KAAK;AACzB,IAAM,uBAAN,MAA2B;AAAA,EACf,cAA0B,MAAM;AAAA,EACxC;AAAA,EACQ,gBAA4B,MAAM;AAAA,EAC1C;AAAA,EACQ,iBAA6B,MAAM;AAAA,EAC3C;AAAA,EACQ,mBAA+B,MAAM;AAAA,EAC7C;AAAA,EACQ,kBAA8B,MAAM;AAAA,EAC5C;AAAA,EACQ,iBAA4C,CAAC,YAAoB;AAAA,EACzE;AAAA,EAEQ;AAAA,EACA;AAAA,EAED,UAAU;AACb,QAAI,YAAY;AAChB,QAAI,YAAY,kBAAkB;AAClC,SAAK,SAAS,IAAI,aAAa,CAAC,WAAmB;AAC/C,aAAO,GAAG,QAAQ,CAAC,MAAM;AACrB,aAAK,cAAc,EAAE,SAAS,EAAE,QAAQ,WAAW,EAAE,CAAC;AAAA,MAC1D,CAAC;AAAA,IACL,CAAC,EAAE,GAAG,SAAS,MAAM;AAAE,WAAK,SAAS;AAAA,IAAK,CAAC;AAC3C,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,OAAO,SAAS;AAAA,IAChC;AAAA,EACJ;AAAA,EAEO,aAAa;AAChB,SAAK,OAAO,MAAM;AAAA,EACtB;AAAA,EAEO,KAAK,SAAiB;AACzB,QAAI,YAAY;AAChB,QAAI,YAAY,kBAAkB;AAClC,QAAI,CAAC,KAAK,QAAQ;AACd,WAAK,SAAS,IAAI,QAAQ,SAAS,EAAE,GAAG,SAAS,MAAM;AAAE,aAAK,SAAS;AAAA,MAAK,CAAC;AAAA,IACjF;AACA,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,MAAM,OAAO,KAAK,SAAS,SAAS,CAAC;AAAA,IACrD;AAAA,EACJ;AAAA,EAEO,eAAe,UAAsB;AACxC,SAAK,cAAc;AAAA,EACvB;AAAA,EAEO,iBAAiB,UAAsB;AAC1C,SAAK,gBAAgB;AAAA,EACzB;AAAA,EAEO,kBAAkB,UAAsB;AAC3C,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EAEO,oBAAoB,UAAsB;AAC7C,SAAK,mBAAmB;AAAA,EAC5B;AAAA,EAEO,mBAAmB,UAAsB;AAC5C,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EAEO,kBAAkB,UAAqC;AAC1D,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EAEQ,cAAc,SACtB;AACI,YAAQ,SACR;AAAA,MACI,KAAK;AACD,aAAK,YAAY;AACjB;AAAA,MACJ,KAAK;AACD,aAAK,cAAc;AACnB;AAAA,MACJ,KAAK;AACD,aAAK,eAAe;AACpB;AAAA,MACJ,KAAK;AACD,aAAK,iBAAiB;AACtB;AAAA,MACJ,KAAK;AACD,aAAK,gBAAgB;AACrB;AAAA,MACJ,KAAK;AAAA,MACL;AACI,aAAK,eAAe,OAAO;AAC3B;AAAA,IACR;AAAA,EACJ;AACJ;AAEA,IAAO,+BAAQ;","names":[]}